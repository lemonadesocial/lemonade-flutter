definitions:
  instance_mac_mini: &instance_mac_mini
    instance_type: mac_mini_m1
    max_build_duration: 75
  env_versions: &env_versions
    flutter: fvm
    xcode: 16.2
    cocoapods: 1.16.2
  integrations:
    app_store_connect_integrations: &app_store_connect_integrations
      app_store_connect: Lemonade
  environment:
    load_environment_values: &load_environment_values
      groups:
        - google_credentials 
        - env_values
    ios_signing_staging: &ios_signing_staging
      ios_signing:
        distribution_type: app_store
        bundle_identifier: social.lemonade.app.staging
      vars:
        APP_ID: 6450680676
    ios_signing_production: &ios_signing_production
      ios_signing:
        distribution_type: app_store
        bundle_identifier: social.lemonade.app
      vars:
        APP_ID: 6450694884
    android_signing_staging: &android_signing_staging
      android_signing:
        - Lemonade
      vars:
        PACKAGE_NAME: "social.lemonade.app.staging"
        GOOGLE_PLAY_TRACK: "internal"
    android_signing_production: &android_signing_production
      android_signing:
        - Lemonade
      vars:
        PACKAGE_NAME: "social.lemonade.app"
        GOOGLE_PLAY_TRACK: "internal"
  artifacts:
    - &ipa build/ios/ipa/*.ipa
    - &xcode_log /tmp/xcodebuild_logs/*.log
    - &dsym $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    - &app $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
    - &apk build/**/outputs/apk/**/*.apk
    - &aab build/**/outputs/bundle/**/*.aab
    - &android_log build/**/outputs/**/mapping.txt
    - &flutter_log flutter_drive.log
  scripts:
    - &load_env_files
      name: Setup Staging ENV
      script: |
        #!/bin/sh
        set -e # exit on first failed command
        echo $ENV | base64 --decode > $CM_BUILD_DIR/.env
        echo $ENV_STAGING | base64 --decode > $CM_BUILD_DIR/.env.staging
        echo $ENV_PRODUCTION | base64 --decode > $CM_BUILD_DIR/.env.production
        
        # Generate Firebase services file
        echo $FIREBASE_OPTIONS_STAGING | base64 --decode > $CM_BUILD_DIR/lib/firebase_options_staging.dart
        echo $FIREBASE_OPTIONS_PRODUCTION | base64 --decode > $CM_BUILD_DIR/lib/firebase_options_production.dart
        echo $GOOGLESERVICE_INFO_PLIST_STAGING | base64 --decode > $CM_BUILD_DIR/ios/config/staging/GoogleService-Info.plist
        echo $GOOGLESERVICE_INFO_PLIST_PRODUCTION | base64 --decode > $CM_BUILD_DIR/ios/config/production/GoogleService-Info.plist
        echo $GOOGLESERVICE_JSON_STAGING | base64 --decode > $CM_BUILD_DIR/android/app/src/staging/google-services.json
        echo $GOOGLESERVICE_JSON_PRODUCTION | base64 --decode > $CM_BUILD_DIR/android/app/src/production/google-services.json

        echo $SHOREBIRD_YAML | base64 --decode > $CM_BUILD_DIR/shorebird.yaml
    - &extract_tag_information
      name: Extract tag information
      script: |
        #!/bin/sh
        # Extract build name 1.0.0
        TAG_BUILD_NAME=$(echo $CM_TAG | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')

        # Extract build number 141
        TAG_BUILD_NUMBER=$(echo $CM_TAG | grep -o '+[0-9]\+' | tr -d '+')

        echo $TAG_BUILD_NAME
        echo $TAG_BUILD_NUMBER

        # Write variables to CM_ENV
        echo "TAG_BUILD_NAME=$TAG_BUILD_NAME" >> $CM_ENV
        echo "TAG_BUILD_NUMBER=$TAG_BUILD_NUMBER" >> $CM_ENV
    - &use_profiles
      name: Set up code signing settings on Xcode project
      script: |
        xcode-project use-profiles  
    - &get_flutter_packages
      name: Get Flutter packages
      script: |
        flutter packages pub get
    - &run_build_runner
      name: Run build runner
      script: |
        dart run build_runner build --delete-conflicting-outputs
    - &generate_i18_file
      name: Generate i18n files
      script: |
        dart run slang
    - &setup_local_properties
      name: Set up local properties
      script: |
        echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
    - &install_pods
      name: Install pods
      script: |
        find . -name "Podfile" -execdir pod install \;
    - &build_ipa_staging
      name: Build ipa staging
      script: |
        BUILD_NUMBER=$(($(app-store-connect get-latest-testflight-build-number "$APP_ID") + 1))
        flutter build ipa --release \
          --build-number=$BUILD_NUMBER \
          --export-options-plist=/Users/builder/export_options.plist \
          --flavor="staging" \
          -t "lib/main_staging.dart"
    - &build_ipa_production
      name: Build ipa production
      script: |
        BUILD_NUMBER=$(($(app-store-connect get-latest-testflight-build-number "$APP_ID") + 1))
        flutter build ipa --release \
          --build-number=$BUILD_NUMBER \
          --export-options-plist=/Users/builder/export_options.plist \
          --flavor="production" \
          -t "lib/main_production.dart"
    - &build_apk_staging
      name: Build Android apk staging
      script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        flutter build apk --release \
          --build-number=$BUILD_NUMBER \
          --flavor="staging" \
          -t "lib/main_staging.dart"
    - &build_aab_staging
      name: Build Android appbundle staging
      script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        flutter build appbundle --release \
          --build-number=$BUILD_NUMBER \
          --flavor="staging" \
          -t "lib/main_staging.dart"
    - &build_apk_production
      name: Build Android apk production
      script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        flutter build apk --release \
          --build-number=$BUILD_NUMBER \
          --flavor="production" \
          -t "lib/main_production.dart"
    - &build_aab_production
      name: Build Android appbundle production
      script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        flutter build appbundle --release \
          --build-number=$BUILD_NUMBER \
          --flavor="production" \
          -t "lib/main_production.dart"
    #
    # Shorebird
    #
    - &setup_shorebird
      name: 🐦 Setup Shorebird
      script: |
        # Install Shorebird
        curl --proto '=https' --tlsv1.2 https://raw.githubusercontent.com/shorebirdtech/install/main/install.sh -sSf | bash

        # Add Shorebird to PATH
        echo PATH="$HOME/.shorebird/bin:$PATH" >> $CM_ENV
    - &release_shorebird_ipa_staging
      name: Release shorebird ipa staging
      script: |
        BUILD_NUMBER=$(($(app-store-connect get-latest-testflight-build-number "$APP_ID") + 1))
        chmod +x scripts/set_build_number.sh
        ./scripts/set_build_number.sh "$BUILD_NUMBER"
        shorebird release ios --flutter-version=3.19.6 --flavor staging -- \
          --build-number=$BUILD_NUMBER \
          --export-options-plist=/Users/builder/export_options.plist \
          --flavor="staging" \
          -t "lib/main_staging.dart"
    - &release_shorebird_apk_staging
      name: Release shorebird android apk staging
      script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        chmod +x scripts/set_build_number.sh
        ./scripts/set_build_number.sh "$BUILD_NUMBER"
        shorebird release android --artifact apk --flutter-version=3.19.6 --flavor staging -- \
          --build-number=$BUILD_NUMBER \
          --flavor="staging" \
          -t "lib/main_staging.dart"
    - &release_shorebird_ipa_production
      name: Release shorebird ipa production
      script: |
        BUILD_NUMBER=$(($(app-store-connect get-latest-testflight-build-number "$APP_ID") + 1))
        chmod +x scripts/set_build_number.sh
        ./scripts/set_build_number.sh "$BUILD_NUMBER"
        shorebird release ios --flutter-version=3.19.6 --flavor production -- \
          --build-number=$BUILD_NUMBER \
          --export-options-plist=/Users/builder/export_options.plist \
          --flavor="production" \
          -t "lib/main_production.dart"
    - &release_shorebird_apk_production
      name: Release shorebird android apk production
      script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        chmod +x scripts/set_build_number.sh
        ./scripts/set_build_number.sh "$BUILD_NUMBER"
        shorebird release android --artifact apk --flutter-version=3.19.6 --flavor production -- \
          --build-number=$BUILD_NUMBER \
          --flavor="production" \
          -t "lib/main_production.dart"
    - &patch_shorebird_ios_staging
      name: Patch shorebird ipa staging
      script: |
        shorebird patch ios --release-version "$TAG_BUILD_NAME"+"$TAG_BUILD_NUMBER" --target ./lib/main_staging.dart --flavor staging --force
    - &patch_shorebird_android_staging
      name: Patch shorebird android staging
      script: |
        shorebird patch android --release-version "$TAG_BUILD_NAME"+"$TAG_BUILD_NUMBER" --target ./lib/main_staging.dart --flavor staging --force
    - &patch_shorebird_ios_production
      name: Patch shorebird ipa production
      script: |
        shorebird patch ios --release-version "$TAG_BUILD_NAME"+"$TAG_BUILD_NUMBER" --target ./lib/main_production.dart --flavor production --force
    - &patch_shorebird_android_production
      name: Patch shorebird android production
      script: |
        shorebird patch android --release-version "$TAG_BUILD_NAME"+"$TAG_BUILD_NUMBER" --target ./lib/main_production.dart --flavor production --force
    - &github_create_prerelease
      name: Github release
      script: | 
        # Publish only for tag builds
        if [ -z ${CM_TAG} ]; then
          echo "Not a tag build, will not publish GitHub release"
          exit 0
        fi
        gh release create "${CM_TAG}" \
          --title "Lemonade ${CM_TAG}" \
          --generate-notes
          --prerelease
    - &notify_ios_staging_to_slack
      name: Notify iOS Staging app to slack
      script: | 
        ipaPath=$(find build -name "*.ipa" | head -1)
        if [[ -z ${ipaPath} ]]
        then
          echo "No .ipa were found"
        else
          echo "Publishing .ipa artifacts"
          ARTIFACT_URL=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | endswith("'".ipa"'")) | .url')
          curl -0 -v -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data-raw '
          {
            "attachments": [
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "🚀 Build iOS Staging app successfully"
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Build Link*:\n<https://codemagic.io/app/'"$CM_PROJECT_ID"'/build/'"$CM_BUILD_ID"'|Click here>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Pull Request*:\n<https://github.com/'"$CM_REPO_SLUG"'/pull/'"$CM_PULL_REQUEST_NUMBER"'|Open pull request>"
                      }
                    ]
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Branch*\n'"$CM_BRANCH"'"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit*\n'"$CM_COMMIT"'"
                      }
                    ]
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Download Staging App on TestFlight"
                        },
                        "url": "itms-beta://beta.itunes.apple.com/v1/app/6450680676"
                      }
                    ]
                  }
                ]
              }
            ]
          }'
        fi
    - &notify_ios_production_to_slack
      name: Notify iOS Production app to slack
      script: | 
        ipaPath=$(find build -name "*.ipa" | head -1)
        if [[ -z ${ipaPath} ]]
        then
          echo "No .ipa were found"
        else
          echo "Publishing .ipa artifacts"
          ARTIFACT_URL=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | endswith("'".ipa"'")) | .url')
          curl -0 -v -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data-raw '
          {
            "attachments": [
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "🚀 Build iOS Production app successfully"
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Build Link*:\n<https://codemagic.io/app/'"$CM_PROJECT_ID"'/build/'"$CM_BUILD_ID"'|Click here>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Pull Request*:\n<https://github.com/'"$CM_REPO_SLUG"'/pull/'"$CM_PULL_REQUEST_NUMBER"'|Open pull request>"
                      }
                    ]
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Tag*\n'"$CM_TAG"'"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit*\n'"$CM_COMMIT"'"
                      }
                    ]
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Download on TestFlight"
                        },
                        "url": "itms-beta://beta.itunes.apple.com/v1/app/6450694884"
                      }
                    ]
                  }
                ]
              }
            ]
          }'
        fi
    - &notify_android_staging_to_slack
      name: Notify Android Staging app to slack
      script: | 
        apkPath=$(find build -name "*.apk" | head -1)
        if [[ -z ${apkPath} ]]
        then
          echo "No .apk were found"
        else
          echo "Publishing .apk artifacts"
          ARTIFACT_APK_URL=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | endswith("'".apk"'")) | .url')
          curl -0 -v -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data-raw '
          {
            "attachments": [
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "🚀 Build Android Staging app successfully"
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Build Link*:\n<https://codemagic.io/app/'"$CM_PROJECT_ID"'/build/'"$CM_BUILD_ID"'|Click here>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Pull Request*:\n<https://github.com/'"$CM_REPO_SLUG"'/pull/'"$CM_PULL_REQUEST_NUMBER"'|Open pull request>"
                      }
                    ]
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Branch*\n'"$CM_TAG"'"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit*\n'"$CM_COMMIT"'"
                      }
                    ]
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Download APK"
                        },
                        "url": "'${ARTIFACT_APK_URL}'"
                      }
                    ]
                  }
                ]
              }
            ]
          }'
        fi
    - &notify_android_production_to_slack
      name: Notify Android Production app to slack
      script: | 
        apkPath=$(find build -name "*.apk" | head -1)
        if [[ -z ${apkPath} ]]
        then
          echo "No .apk were found"
        else
          echo "Publishing .apk artifacts"
          ARTIFACT_APK_URL=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | endswith("'".apk"'")) | .url')
          curl -0 -v -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data-raw '
          {
            "attachments": [
              {
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "🚀 Build Android Production app successfully"
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Build Link*:\n<https://codemagic.io/app/'"$CM_PROJECT_ID"'/build/'"$CM_BUILD_ID"'|Click here>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Pull Request*:\n<https://github.com/'"$CM_REPO_SLUG"'/pull/'"$CM_PULL_REQUEST_NUMBER"'|Open pull request>"
                      }
                    ]
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Branch*\n'"$CM_BRANCH"'"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit*\n'"$CM_COMMIT"'"
                      }
                    ]
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Download APK"
                        },
                        "url": "'${ARTIFACT_APK_URL}'"
                      }
                    ]
                  }
                ]
              }
            ]
          }'
        fi
    - &notify_shorebird_patch_ios_production_to_slack
      name: Notify shorebird patch iOS Production app to slack
      script: | 
        curl -0 -v -X POST $SLACK_WEBHOOK_URL \
        -H 'Content-type: application/json' \
        --data-raw '
        {
          "attachments": [
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "🚀 Shorebird patch iOS Production app successfully"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Tag*\n'"$CM_TAG"'"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit*\n'"$CM_COMMIT"'"
                    }
                  ]
                },
              ]
            }
          ]
        }'
    - &notify_shorebird_patch_android_production_to_slack
      name: Notify shorebird patch Android Production app to slack
      script: | 
        curl -0 -v -X POST $SLACK_WEBHOOK_URL \
        -H 'Content-type: application/json' \
        --data-raw '
        {
          "attachments": [
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "🚀 Shorebird patch Android Production app successfully"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Tag*\n'"$CM_TAG"'"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit*\n'"$CM_COMMIT"'"
                    }
                  ]
                },
              ]
            }
          ]
        }'
  email_staging: &email_staging
    email:
      recipients:
        - sieu@coderpush.com
        - thinh@coderpush.com
      notify:
        success: true
        failure: true
  email_production: &email_production
    email:
      recipients:
        - sieu@coderpush.com
        - thinh@coderpush.com
      notify:
        success: true
        failure: true
  ios_app_store_publish: &ios_app_store_publish
    app_store_connect:
      auth: integration
      submit_to_testflight: true
      submit_to_app_store: false
  staging_android_publish: &staging_android_publish
    google_play:
      credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      track: $GOOGLE_PLAY_TRACK
      submit_as_draft: true
  production_android_publish: &production_android_publish
    google_play:
      credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      track: $GOOGLE_PLAY_TRACK
      submit_as_draft: false
workflows:
  # Build iOS Staging 
  ios-staging:
    name: iOS Staging
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_staging
    scripts:
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *install_pods
      - *build_ipa_staging
    artifacts:
      - *ipa
      - *xcode_log
      - *dsym
      - *app
    publishing:
      <<: *ios_app_store_publish
      <<: *email_staging
      scripts:
        - *notify_ios_staging_to_slack

  # Build iOS Production 
  ios-production:
    name: iOS Production
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_production
    scripts:
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *install_pods
      - *build_ipa_production
    artifacts:
      - *ipa
      - *xcode_log
      - *dsym
      - *app
    publishing:
      <<: *ios_app_store_publish
      <<: *email_production
      scripts:
        - *notify_ios_production_to_slack

  # Build Android Staging
  android-staging:
    name: Android Staging
    <<: *instance_mac_mini
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *android_signing_staging
    scripts:
      - *load_env_files
      - *setup_local_properties
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *build_apk_staging
      - *build_aab_staging
    artifacts:
      - *apk
      - *aab
      - *android_log
    publishing:
      <<: *staging_android_publish
      <<: *email_staging
      scripts:
        - *notify_android_staging_to_slack
  
  # Build Android Production
  android-production:
    name: Android Production
    <<: *instance_mac_mini
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *android_signing_production
    scripts:
      - *load_env_files
      - *setup_local_properties
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *build_apk_production
      - *build_aab_production
    artifacts:
      - *apk
      - *aab
      - *android_log
    publishing:
      <<: *production_android_publish
      <<: *email_production
      scripts:
        - *notify_android_production_to_slack
        
  # 
  # Temp close due to will trigger tag for build production process
  # 
  # Build iOS & Android Production
  # ios-android-production:
  #   name: Build iOS & Android Production
  #   <<: *instance_mac_mini
  #   integrations:
  #     <<: *app_store_connect_integrations
  #   environment:
  #     <<: *env_versions
  #     <<: *load_environment_values
  #     <<: *ios_signing_production
  #     <<: *android_signing_production
  #   scripts:
  #     - *load_env_files
  #     - *use_profiles
  #     - *get_flutter_packages
  #     - *run_build_runner
  #     - *generate_i18_file
  #     - *install_pods
  #     - *build_ipa_production
  #     - *setup_local_properties
  #     - *build_apk_production
  #     - *build_aab_production
  #   artifacts:
  #     - *ipa
  #     - *xcode_log
  #     - *dsym
  #     - *app
  #     - *apk
  #     - *aab
  #     - *android_log
  #   publishing:
  #     <<: *ios_app_store_publish
  #     <<: *production_android_publish
  #     <<: *email_production
  #     scripts:
  #       - *github_create_prerelease
  #       - *notify_ios_production_to_slack
  #       - *notify_android_production_to_slack
  
  # 
  # Shorebird 
  # 
  shorebird-release-staging:
    name: Shorebird Release Staging
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_staging
      <<: *android_signing_staging
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: '*-rc*' # v1.0.0-rc.1
          include: true
        - pattern: excluded-tag
          include: false
        - pattern: included-tag
          include: true
    scripts:
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *setup_shorebird
      - *install_pods
      - *release_shorebird_ipa_staging
      - *setup_local_properties
      - *release_shorebird_apk_staging
    artifacts:
      - build/ios/ipa/*.ipa
      - build/app/outputs/apk/**/*.apk    
      - build/app/outputs/bundle/**/*.aab    
      - *dsym
    publishing:
      <<: *ios_app_store_publish
      <<: *staging_android_publish
      
  shorebird-release-production:
    name: Shorebird Release Production
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_production
      <<: *android_signing_production
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: '*-rc*' # v1.0.0-rc.1
          include: true
        - pattern: excluded-tag
          include: false
        - pattern: included-tag
          include: true
    scripts:
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *setup_shorebird
      - *install_pods
      - *release_shorebird_ipa_production
      - *setup_local_properties
      - *release_shorebird_apk_production
    artifacts:
      - build/ios/ipa/*.ipa
      - build/app/outputs/apk/**/*.apk    
      - build/app/outputs/bundle/**/*.aab   
      - *dsym
    publishing:
      <<: *ios_app_store_publish
      <<: *production_android_publish
      scripts:
        # - *github_create_prerelease
        - *notify_ios_production_to_slack
        - *notify_android_production_to_slack

  shorebird-patch-ios-staging:
    name: Shorebird Patch iOS Staging
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_staging
      <<: *android_signing_staging
    scripts:
      - *extract_tag_information
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *setup_shorebird
      - *install_pods
      - *patch_shorebird_ios_staging
    artifacts:
      - build/ios/ipa/*.ipa

  shorebird-patch-android-staging:
    name: Shorebird Patch Android Staging
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_staging
      <<: *android_signing_staging
    scripts:
      - *extract_tag_information
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *setup_shorebird
      - *setup_local_properties
      - *patch_shorebird_android_staging
    artifacts:
      - build/app/outputs/apk/**/*.apk    
      - build/app/outputs/bundle/**/*.aab 
  
  shorebird-patch-ios-production:
    name: Shorebird Patch iOS Production
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_production
      <<: *android_signing_production
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: '*-patch-ios.*' # v1.0.0+141-patch-ios.1
          include: true
        - pattern: excluded-tag
          include: false
        - pattern: included-tag
          include: true
      cancel_previous_builds: true
    scripts:
      - *extract_tag_information
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *setup_shorebird
      - *install_pods
      - *patch_shorebird_ios_production
      - *notify_shorebird_patch_ios_production_to_slack
    artifacts:
      - build/ios/ipa/*.ipa

  shorebird-patch-android-production:
    name: Shorebird Patch Android Production
    <<: *instance_mac_mini
    integrations:
      <<: *app_store_connect_integrations
    environment:
      <<: *env_versions
      <<: *load_environment_values
      <<: *ios_signing_production
      <<: *android_signing_production
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: '*-patch-android.*' # v1.0.0+141-patch-android.1
          include: true
        - pattern: excluded-tag
          include: false
        - pattern: included-tag
          include: true
      cancel_previous_builds: true
    scripts:
      - *extract_tag_information
      - *load_env_files
      - *use_profiles
      - *get_flutter_packages
      - *run_build_runner
      - *generate_i18_file
      - *setup_shorebird
      - *setup_local_properties
      - *patch_shorebird_android_production
      - *notify_shorebird_patch_android_production_to_slack
    artifacts:
      - build/app/outputs/apk/**/*.apk    
      - build/app/outputs/bundle/**/*.aab  